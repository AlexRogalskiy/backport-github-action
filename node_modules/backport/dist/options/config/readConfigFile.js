"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.readConfigFile = void 0;
const strip_json_comments_1 = __importDefault(require("strip-json-comments"));
const HandledError_1 = require("../../services/HandledError");
const fs_promisified_1 = require("../../services/fs-promisified");
async function readConfigFile(filepath) {
    const fileContents = await fs_promisified_1.readFile(filepath, 'utf8');
    const configWithoutComments = strip_json_comments_1.default(fileContents);
    try {
        return JSON.parse(configWithoutComments);
    }
    catch (e) {
        throw new HandledError_1.HandledError(`"${filepath}" contains invalid JSON:\n\n${fileContents}\n\nTry validating the file on https://jsonlint.com/`);
    }
}
exports.readConfigFile = readConfigFile;

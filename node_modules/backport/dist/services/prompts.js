"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.confirmPrompt = exports.promptForTargetBranches = exports.promptForCommits = void 0;
const chalk_1 = __importDefault(require("chalk"));
const inquirer_1 = __importDefault(require("inquirer"));
const lodash_isempty_1 = __importDefault(require("lodash.isempty"));
const commitFormatters_1 = require("./github/commitFormatters");
async function prompt(options) {
    const { promptResult } = (await inquirer_1.default.prompt([
        { ...options, name: 'promptResult' },
    ]));
    return promptResult;
}
async function promptForCommits({ commitChoices, isMultipleChoice, }) {
    const choices = commitChoices.map((c, i) => {
        const existingPRs = c.existingTargetPullRequests
            .map((item) => {
            const styling = item.state === 'MERGED' ? chalk_1.default.green : chalk_1.default.gray;
            return styling(item.branch);
        })
            .join(', ');
        const position = chalk_1.default.gray(`${i + 1}.`);
        return {
            name: `${position} ${c.formattedMessage} ${existingPRs}`,
            short: c.pullNumber
                ? `#${c.pullNumber} (${commitFormatters_1.getShortSha(c.sha)})`
                : commitFormatters_1.getShortSha(c.sha),
            value: c,
        };
    });
    const res = await prompt({
        loop: false,
        pageSize: 15,
        choices: choices,
        message: 'Select commit',
        type: isMultipleChoice ? 'checkbox' : 'list',
    });
    const selectedCommits = Array.isArray(res) ? res.reverse() : [res];
    return lodash_isempty_1.default(selectedCommits)
        ? promptForCommits({ commitChoices: commitChoices, isMultipleChoice })
        : selectedCommits;
}
exports.promptForCommits = promptForCommits;
async function promptForTargetBranches({ targetBranchChoices, isMultipleChoice, }) {
    const res = await prompt({
        loop: false,
        pageSize: 15,
        choices: targetBranchChoices,
        message: 'Select branch',
        type: isMultipleChoice ? 'checkbox' : 'list',
    });
    const selectedBranches = Array.isArray(res) ? res : [res];
    return lodash_isempty_1.default(selectedBranches)
        ? promptForTargetBranches({
            targetBranchChoices,
            isMultipleChoice,
        })
        : selectedBranches;
}
exports.promptForTargetBranches = promptForTargetBranches;
function confirmPrompt(message) {
    return prompt({ message, type: 'confirm' });
}
exports.confirmPrompt = confirmPrompt;

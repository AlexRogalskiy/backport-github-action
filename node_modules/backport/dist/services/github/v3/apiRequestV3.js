"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleGithubV3Error = exports.apiRequestV3 = void 0;
const axios_1 = __importDefault(require("axios"));
const HandledError_1 = require("../../HandledError");
const logger_1 = require("../../logger");
async function apiRequestV3(config) {
    var _a, _b, _c, _d, _e;
    try {
        const response = await axios_1.default.request(config);
        logger_1.logger.info(`${(_a = config.method) === null || _a === void 0 ? void 0 : _a.toUpperCase()} ${config.url} (status: ${response.status})`);
        logger_1.logger.debug('Response headers:', response.headers);
        logger_1.logger.verbose('Response data:', response.data);
        return response.data;
    }
    catch (ex) {
        const e = ex;
        logger_1.logger.info(`${(_b = config.method) === null || _b === void 0 ? void 0 : _b.toUpperCase()} ${config.url} (status: ${(_c = e.response) === null || _c === void 0 ? void 0 : _c.status})`);
        logger_1.logger.debug('Response headers:', (_d = e.response) === null || _d === void 0 ? void 0 : _d.headers);
        logger_1.logger.info('Response data:', (_e = e.response) === null || _e === void 0 ? void 0 : _e.data);
        throw handleGithubV3Error(e);
    }
}
exports.apiRequestV3 = apiRequestV3;
function handleGithubV3Error(e) {
    var _a, _b;
    if (!((_a = e.response) === null || _a === void 0 ? void 0 : _a.data)) {
        return e;
    }
    const errorMessages = (_b = e.response.data.errors) === null || _b === void 0 ? void 0 : _b.map((error) => error.message);
    if (errorMessages) {
        return new HandledError_1.HandledError(`${e.response.data.message}: ${errorMessages.join(', ')} (Github v3)`);
    }
    if (e.response.data.message) {
        return new HandledError_1.HandledError(`${e.response.data.message} (Github v3)`);
    }
    return new HandledError_1.HandledError(`Unexpected response from Github API (v3):\n${JSON.stringify(e.response.data, null, 2)}`);
}
exports.handleGithubV3Error = handleGithubV3Error;

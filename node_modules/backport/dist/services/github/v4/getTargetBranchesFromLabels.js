"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTargetBranchesFromLabels = void 0;
const lodash_flatmap_1 = __importDefault(require("lodash.flatmap"));
const lodash_uniq_1 = __importDefault(require("lodash.uniq"));
const filterEmpty_1 = require("../../../utils/filterEmpty");
function getTargetBranchesFromLabels({ labels, branchLabelMapping, } = {}) {
    if (!branchLabelMapping || !labels) {
        return [];
    }
    const targetBranches = lodash_flatmap_1.default(labels, (label) => {
        // only get first match
        const result = Object.entries(branchLabelMapping).find(([labelPattern]) => {
            const regex = new RegExp(labelPattern);
            const isMatch = label.match(regex) !== null;
            return isMatch;
        });
        if (result) {
            const [labelPattern, targetBranch] = result;
            const regex = new RegExp(labelPattern);
            return label.replace(regex, targetBranch);
        }
    })
        .filter((targetBranch) => targetBranch !== '')
        .filter(filterEmpty_1.filterEmpty);
    return lodash_uniq_1.default(targetBranches);
}
exports.getTargetBranchesFromLabels = getTargetBranchesFromLabels;

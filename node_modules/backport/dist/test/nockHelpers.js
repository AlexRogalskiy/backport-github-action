"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNockCallsForScope = exports.mockGqlRequest = void 0;
const url_1 = require("url");
const graphql_tag_1 = __importDefault(require("graphql-tag"));
const nock_1 = __importDefault(require("nock"));
function mockGqlRequest({ name, statusCode, body, headers, apiBaseUrl, }) {
    const { origin, pathname } = new url_1.URL(
    // default to localhost as host to avoid CORS issues
    apiBaseUrl !== null && 
    // default to localhost as host to avoid CORS issues
    apiBaseUrl !== void 0 ? 
    // default to localhost as host to avoid CORS issues
    apiBaseUrl : 'http://localhost/graphql');
    const scope = nock_1.default(origin)
        .post(pathname, (body) => getGqlName(body.query) === name)
        .reply(statusCode, body, headers);
    return getNockCallsForScope(scope);
}
exports.mockGqlRequest = mockGqlRequest;
function getGqlName(query) {
    const obj = graphql_tag_1.default `
    ${query}
  `;
    // @ts-expect-error
    return obj.definitions[0].name.value;
}
function getNockCallsForScope(scope) {
    const calls = [];
    scope.on('request', (req, interceptor, body) => {
        calls.push(JSON.parse(body));
    });
    return calls;
}
exports.getNockCallsForScope = getNockCallsForScope;

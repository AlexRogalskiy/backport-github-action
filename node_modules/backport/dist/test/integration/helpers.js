"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteAndSetupEnvironment = exports.getLatestCommit = exports.getBranches = void 0;
const childProcess = require("child_process");
const util_1 = require("util");
const del = require("del");
const envConstants_1 = require("./envConstants");
const unmockedExec = childProcess.exec;
const execPromisified = util_1.promisify(unmockedExec);
async function getBranches(cwd) {
    const { stdout } = await execPromisified('git --no-pager branch', { cwd });
    return stdout
        .trim()
        .split('\n')
        .map((branch) => branch.trim());
}
exports.getBranches = getBranches;
async function getLatestCommit({ branch, commitCount, cwd, }) {
    const cmd = `git --no-pager log ${branch} -n ${commitCount} --format="" --unified=0 --compact-summary`;
    const { stdout } = await execPromisified(cmd, { cwd });
    return stdout;
}
exports.getLatestCommit = getLatestCommit;
// cleanup to delete previous files
async function deleteAndSetupEnvironment() {
    await del(envConstants_1.INTEGRATION_TEST_DATA_PATH);
    await execPromisified(`unzip mock-environment.zip`, {
        cwd: envConstants_1.INTEGRATION_TEST_DIR_PATH,
    });
}
exports.deleteAndSetupEnvironment = deleteAndSetupEnvironment;

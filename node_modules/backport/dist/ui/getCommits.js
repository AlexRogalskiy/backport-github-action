"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCommits = void 0;
const HandledError_1 = require("../services/HandledError");
const fetchCommitBySha_1 = require("../services/github/v3/fetchCommitBySha");
const fetchCommitByPullNumber_1 = require("../services/github/v4/fetchCommitByPullNumber");
const fetchCommitsByAuthor_1 = require("../services/github/v4/fetchCommitsByAuthor");
const fetchPullRequestBySearchQuery_1 = require("../services/github/v4/fetchPullRequestBySearchQuery");
const prompts_1 = require("../services/prompts");
async function getCommits(options) {
    if (options.sha) {
        return [await fetchCommitBySha_1.fetchCommitBySha({ ...options, sha: options.sha })]; // must extract sha to satisfy the ts gods
    }
    if (options.pullNumber) {
        return [
            await fetchCommitByPullNumber_1.fetchCommitByPullNumber({
                ...options,
                pullNumber: options.pullNumber,
            }),
        ];
    }
    if (options.ci) {
        throw new HandledError_1.HandledError('When "--ci" flag is enabled either `--sha` or `--pr` must be specified');
    }
    if (options.prFilter) {
        const commitChoices = await fetchPullRequestBySearchQuery_1.fetchPullRequestBySearchQuery(options);
        return prompts_1.promptForCommits({
            commitChoices,
            isMultipleChoice: options.multipleCommits,
        });
    }
    const commitChoices = await fetchCommitsByAuthor_1.fetchCommitsByAuthor(options);
    return prompts_1.promptForCommits({
        commitChoices,
        isMultipleChoice: options.multipleCommits,
    });
}
exports.getCommits = getCommits;
